#!/bin/sh
#
# SliTaz Pizza chroot cmdline utility. This tool is designed to be run 
# by cron and automatically build flavors in the queue. We build one ISO
# at a time so we don't use too many resources.
#
# Copyright (C) 2012 SliTaz GNU/Linux - GNU gpl v2
# Authors : Christophe Lincoln <pankso@slitaz.org>
#			Eric Joseph-Alexandre <erjo@slitaz.org>
#

VERSION=1.0

. /etc/slitaz/pizza-bot.conf

# Pizza DB files.
pizza="/home/slitaz"
cache="$pizza/cache"
queue="$pizza/queue"
activity="$cache/activity"
public="$pizza/public"
builds="$cache/builds"
lockfile="/var/lock/pizza.lock"
feeds="$pizza/xml"

trap 'rm -f $lockfile ; exit 1' TERM INT

# Help
usage() {
		echo "PizzaBot v$VERSION"
		echo "Usage: $(basename $0) [lock|unlock]"
		exit 0
}

# Get status
status(){
	if [ -f "$lockfile" ]; then
		ps | grep ^`cat $lockfile`  \
			&& echo "Pizza is running." \
			|| echo  "Pizza is locked but not running!"
	else
		echo  "Pizza iis not running."
	fi
	echo  "Flavor in queue: $(ls $queue | wc -l)"
}


# Logger: Write log
_logger() {
	printf "%s pizza-bot: %s\n"  `date '+%D %H'` $@
}

# Log activities, we want first letter capitalized.
log() {
	grep ^[A-Z] | \
		sed s"#^[A-Z]\([^']*\)#$(date '+%Y-%m-%d %H:%M') : \0#" >> $activity
}

# Clean exit.
quit() {
	rm -f $lockfile
	exit 0
}

# Create a XML feed for freshly built flavor.
gen_rss() {
	pubdate=$(date "+%a, %d %b %Y %X")
	cat > $feeds/slitaz-$ID.xml << EOT
	<item>
		<title>$FLAVOR $VERSION</title>
		<link>${PIZZA_URL}?id=$ID</link>
		<guid>slitaz-$ID</guid>
		<pubDate>$pubdate</pubDate>
		<description>$SHORT_DESC</description>
	</item>
EOT
}

# Mail body.
mail_body() {
	md5=$(cat $public/slitaz-$ID/$FLAVOR.md5 | awk '{print $1}')
	cat << EOT
From: SliTaz Pizza <pizza@$MAIL_DOMAIN>
To: $MAINTAINER
Date: $(date '+%a, %d %b %Y %H:%M:%S %z')
Subject: Flavor ISO is built
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit

Hi,

Your custom SliTaz GNU/Linux system is ready to download! It will be
hosted for as long as we can but with absolutely no warranty in time.

Get $FLAVOR ISO and files at: ${PIZZA_URL}?id=$ID

ISO size: $ISO_SIZE
MD5 sum: $md5

If you would like a long time hosting service please get in touch via our 
professional platform at http://slitaz.pro

Visit http://www.slitaz.org for latest news about the project and
get community support on SliTaz Forum http://forum.slitaz.org

Sent by the SliTaz Pizza Mailer

EOT
}

# Run as daemon by default.
case "$1" in
	help|-h)
		usage ;;
	status)
		status ;;
	lock)
		echo $$ > $lockfile ;;
	unlock)
		rm -f $lockfile ;;
	*)
		[ -f "$lockfile" ] && echo "Pizza is locked" && exit 0
		#~ trap 'rm -f $command && exit 1' INT TERM
		echo $$ > $lockfile
		name=$(ls -rt $queue | head -n 1)
		log="$public/$name/distro.log"
		work="$pizza/flavors"
		[ ! "$name" ] && echo "Empty build queue" && quit
		. $queue/$name/receipt

		[ -z "$ID" -o -z "$FLAVOR" ] && echo "$name not valid" && quit
		
		[ -d /proc/1 ] || mount -t proc /proc /proc
		#tazpkg setup-mirror /home/slitaz/packages
		tazpkg recharge
		
		echo "Build started for flavor: <a href='?id=$ID'>$ID</a> ($FLAVOR)" | log
		echo -e "Build started   : $(date '+%Y-%m-%d %H:%M')\n" | tee -a $log
		
		rm -rf $work && mkdir -p $work && cd $work
		mv $queue/$name $FLAVOR
		chown -R root.root $FLAVOR
		tazlito pack-flavor $FLAVOR | tee -a $log
		tazlito get-flavor $FLAVOR | tee -a $log
		mv $FLAVOR.flavor $public/$name
		sed -i s"/^ISO_NAME=.*/ISO_NAME=\"$FLAVOR\"/" tazlito.conf
		yes '' | tazlito gen-distro 2>&1 | tee -a $log
		
		# Create an XML feed
		gen_rss
		
		# We want a public packages list md5sum file and move ISO so users
		# can download it. Keep original pkgs list and build a complete one.
		cp -f $FLAVOR/packages.list $public/$name
		cd $pizza/distro
		pkgsinst="$public/$name/installed.list"
		rm -f $pkgsinst && touch $pkgsinst
		for pkg in $(ls -1 rootfs/var/lib/tazpkg/installed)
		do
			. rootfs/var/lib/tazpkg/installed/$pkg/receipt
			echo "$PACKAGE | $VERSION | $SHORT_DESC" >> $pkgsinst
		done
		echo "ISO_SIZE=\"$(du -sh $FLAVOR.iso | awk '{print $1}')\"" >> \
			$public/$name/receipt
		echo "ROOTFS_SIZE=\"$(du -sh rootfs | awk '{print $1}')\"" >> \
			$public/$name/receipt
		md5sum $FLAVOR.iso > $public/$name/$FLAVOR.md5
		mv $FLAVOR.iso $public/$name
		chown -R www.www $public/$name
		
		# Send mail if enabled.
		if [ "$MAIL_FROM" ]; then
			. $public/$name/receipt
			echo "Sending mail to: $MAINTAINER"
			mail_body | /usr/bin/sendmail -f $MAIL_FROM $MAINTAINER
		fi
		
		# Notify Admin if enabled.
		if [ "$MAIL_ADMIN" ]; then
			echo "Sending mail to: $MAIL_ADMIN"
			echo -e "From: SliTaz Pizza<noreply@slitaz.org>\nSubject: New build on Pizza\nNew flavor built on Pizza: ${PIZZA_URL}?id=$ID " \
			 | /usr/bin/sendmail -f $MAIL_FROM $MAIL_ADMIN
		fi
		
		# Count builds
		count=$(cat $builds)
		count=$(($count + 1))
		echo "$count" > $builds
		rm -f $lockfile ;;
esac
exit 0
